version: '3.7'

networks:
  apinet:
    ipam:
      driver: default
      config:
        - subnet: 163.30.99.0/24

services:
  manager-postgres:
    image: postgres:11.3-alpine
    container_name: dbpg
    volumes:
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    environment:
      POSTGRES_USER: md
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: banner_rotation
    ports:
      - "54222:5432"
    networks:
      apinet:
        ipv4_address: 163.30.99.51
#
#  rabbit:
#    image: "rabbitmq:3-management"
#    container_name: rabbit
#    environment:
#      RABBITMQ_DEFAULT_USER: "guest"
#      RABBITMQ_DEFAULT_PASS: "guest"
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.53
#
  test_server:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: test
    restart: on-failure
    depends_on:
      - manager-postgres
    environment:
      REG_SERVICE_DB_USER: md
      REG_SERVICE_DB_PASSWORD: secret
      REG_SERVICE_DB_NAME: banner_rotation
      REG_SERVICE_DB_HOST: dbpg
      REG_SERVICE_DB_PORT: 5432
      REG_SERVICE_LOG_LEVEL: info
    networks:
      apinet:
        ipv4_address: 163.30.99.52
#
#  scheduler:
#    build: ./scheduler
#    container_name: scheduler
#    restart: on-failure
#    depends_on:
#      - manager-postgres
#      - rabbit
#      - grpc_server
#    environment:
#      RABBIT_USER: guest
#      RABBIT_PASSWORD: guest
#      RABBIT_HOST: rabbit
#      RABBIT_PORT: 5672
#      LOG_LEVEL: info
#      GRPC_PORT: 50054
#      GRPC_HOST: grpc
#      LISTEN_IP: 0.0.0.0
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.55
#
#  message_server:
#    build: ./message_office
#    container_name: message_server
#    depends_on:
#      - scheduler
#      - rabbit
#      - manager-postgres
#    restart: on-failure
#    environment:
#      RABBIT_USER: guest
#      RABBIT_PASSWORD: guest
#      RABBIT_HOST: rabbit
#      RABBIT_PORT: 5672
#      LOG_LEVEL: info
#      DB_USER: md
#      DB_PASSWORD: secret
#      DB_NAME: md_calendar
#      DB_HOST: dbpg
#      DB_PORT: 5432
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.60
#
#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prom
#    volumes:
#      - ./build/prometheus/:/etc/prometheus/
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml
#    ports:
#      - "9090:9090"
#    depends_on:
#      - grpc_server
#      - manager-postgres
#    restart: always
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.15
#
#  pg_exporter:
#    image: wrouesnel/postgres_exporter:v0.8.0
#    container_name: pg_exporter
#    volumes:
#      - ./build/pgexporter/:/app/
#    depends_on:
#      - grpc_server
#      - prometheus
#      - manager-postgres
#    restart: on-failure
#    command:
#      - --extend.query-path=/app/pg_queries.yml
##      - --disable-default-metrics
##      - --disable-settings-metrics
#    environment:
#      DATA_SOURCE_NAME: "postgresql://md:secret@162.30.99.51:5432/md_calendar?sslmode=disable"
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.17
#
#  client_server:
#    build:
#      context: ./client
#      dockerfile: Dockerfile_grpc
#    container_name: client_web
#    depends_on:
#      - scheduler
#      - message_server
#      - grpc_server
#    restart: on-failure
#    environment:
#      WEB_PORT: 8888
#      GRPC_PORT: 50054
#      LISTEN_IP: grpc
#      LOG_LEVEL: info
#      DB_USER: md
#      DB_PASSWORD: secret
#      DB_NAME: md_calendar
#      DB_HOST: dbpg
#      DB_PORT: 5432
#    networks:
#      apinet:
#        ipv4_address: 162.30.99.75
